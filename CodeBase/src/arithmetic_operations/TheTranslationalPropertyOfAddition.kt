/*
Сокращение таблицы сложения на основе переместительного свойства сложения - это метод,
который позволяет упростить сложение большого количества чисел. Он основан на том,
что порядок слагаемых не влияет на результат сложения.

Допустим, у нас есть таблица сложения, которая выглядит так:

1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9

Мы можем использовать переместительное свойство сложения, чтобы сократить количество операций сложения.
Для этого мы можем сгруппировать слагаемые таким образом:

(1 + 9) + (2 + 8) + (3 + 7) + (4 + 6) + 5

Теперь мы можем сложить каждую пару скобок, чтобы получить:

10 + 10 + 10 + 10 + 5

Затем мы можем сложить все числа вместе, чтобы получить окончательный результат: 45

В этом примере мы используем переместительное свойство сложения, чтобы сократить количество операций сложения.
Мы сначала складываем первый и последний элементы списка, затем второй и предпоследний, третий и предпредпоследний,
четвертый и предпредпредпоследний, и, наконец, средний элемент списка. Таким образом, мы можем сократить количество
операций сложения, если переставим слагаемые местами.
 */

fun main() {
    val numbers = listOf(1, 2, 3, 4, 5, 6, 7, 8, 9)

    val result = (numbers.first() + numbers.last()) + (numbers[1] + numbers[numbers.size - 2])
    +(numbers[2] + numbers[numbers.size - 3]) + (numbers[3] + numbers[numbers.size - 4]) + numbers[numbers.size / 2]
    println(result) // 45
}