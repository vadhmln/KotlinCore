public class ControlFlowJava {
    public static void main(String[] args) {
        // if
        /*
         *Выражение if/else проверяет истинность некоторого условия и в зависимости от
         *результатов проверки выполняет определенный код:
         */
        int num1 = 6;
        int num2 = 4;
        if (num1 > num2) {
            System.out.println("Первое число больше второго");
        }

        /*
         *если мы захотим, чтобы при несоблюдении условия также выполнялись какие-либо действия?
         *В этом случае мы можем добавить блок else:
         */

        int num3 = 6;
        int num4 = 4;
        if (num3 > num4) {
            System.out.println("Первое число больше второго");
        } else {
            System.out.println("Первое число меньше второго");
        }

        /*
         *С помощью выражения else if, мы можем обрабатывать дополнительные условия:
         */

        int num5 = 6;
        int num6 = 8;
        if (num5 > num6) {
            System.out.println("Первое число больше второго");
        } else if (num5 < num6) {
            System.out.println("Первое число меньше второго");
        } else {
            System.out.println("Числа равны");
        }

        /*
         *Также мы можем соединить сразу несколько условий, используя логические операторы:
         */

        int num7 = 8;
        int num8 = 6;
        if (num7 > num8 && num7 > 7) {
            System.out.println("Первое число больше второго и больше 7");
        }

        //switch
        /*
         *Конструкция switch/case аналогична конструкции if/else, так как позволяет обработать сразу несколько условий.
         *После ключевого слова switch в скобках идет сравниваемое выражение. Значение этого выражения последовательно
         * сравнивается со значениями, помещенными после операторов сase. И если совпадение найдено, то будет выполняет
         * соответствующий блок сase.
         * В конце блока сase ставится оператор break, чтобы избежать выполнения других блоков.
         * Если мы хотим также обработать ситуацию, когда совпадения не будет найдено, то можно добавить блок default.
         */
        int num = 8;
        switch (num) {

            case 1:
                System.out.println("число равно 1");
                break;
            case 8:
                System.out.println("число равно 8");
                num++;
                break;
            case 9:
                System.out.println("число равно 9");
                break;
            default:
                System.out.println("число не равно 1, 8, 9");
        }

        //for
        /*
         *Первая часть объявления цикла создает и инициализирует счетчик i.
         *Вторая часть - условие, при котором будет выполняться цикл.
         *И третья часть - приращение счетчика на единицу.
         */

        for (int i = 0; i < 9; i++) {
            System.out.printf("Квадрат числа %d равен %d \n", i, i * i);
        }

        //while
        /*
         *Цикл while сразу проверяет истинность некоторого условия, и если условие истинно, то код цикла выполняется
         */

        int j = 0;
        while (j < 10) {
            System.out.println(j);
            j++;
        }

        //Если нужен обратный отсчёт
        int counter = 10;
        while (counter > 0) {
            System.out.println(counter);
            counter--;
        }

        /*
         *Поскольку цикл while вычисляет своё условное выражение в начале цикла, то тело цикла не будет выполняться,
         * если условие с самого начала было ложным.
         * Вы никогда не увидите сообщение - "Случилось чудо - кот не голоден"
         */

        boolean isHungry; // голоден ли кот
        isHungry = true; // где вы видали сытого кота?
        while(!isHungry) {
            System.out.println("Вы никогда не увидите это сообщение");
        }

        //Бесконечный цикл. Создадим условие, которое всегда имеет значение true.

//        boolean isWannaPlay = true;
//        while(isWannaPlay) {
//            System.out.println("Бесконечный цикл...");
//        }

        //Операторы continue и break
        /*
         *Оператор break позволяет выйти из цикла в любой его момент, даже если цикл не закончил свою работу/
         *Когда счетчик станет равным 5, сработает оператор break, и цикл завершится.
         */

        for (int i = 0; i < 10; i++){
            if (i == 5)
                break;
            System.out.println(i);
        }

        /*
         *Теперь сделаем так, чтобы если число равно 5, цикл не завершался, а просто переходил к следующей итерации.
         * Для этого используем оператор continue
         * В этом случае, когда выполнение цикла дойдет до числа 5, программа просто пропустит это число
         * и перейдет к следующему.
         */

        for (int i = 0; i < 10; i++){
            if (i == 5)
                continue;
            System.out.println(i);
        }

        //Тернарная операция
        /*
         *В этой операции участвуют сразу три операнда. В зависимости от условия тернарная операция возвращает второй
         *или третий операнд: если условие равно true, то возвращается второй операнд; если условие равно false, то третий.
         */

        int x = 3;
        int y = 2;
        int z = x < y ? (x + y) : (x - y);
        System.out.println(z);

        /*
         *Здесь результатом тернарной операции является переменная z. Сначала проверяется условие x<y.
         *И если оно соблюдается, то z будет равно второму операнду - (x+y), иначе z будет равно третьему операнду.
         */
    }
}
